apply from: '../metl-assemble/common.gradle'

apply plugin: 'fi.jasoft.plugin.vaadin'

configurations {
    executableWar 
    provided
}

eclipse {
    wtp {
        component {
            sourceDirs += file('src/test/resources')
        }
    }
}

war {
    archiveName="metl.war"
    jar.enabled = true
    from {
        configurations.executableWar.collect {
            it.isDirectory() ? it : project.zipTree(it)
        }
    }    
    manifest { attributes 'Main-Class': 'org.jumpmind.metl.Metl' }
}

if (new Boolean(publishJar)) {
    configurations.archives.with {    
        artifacts.remove artifacts.find { it.archiveTask.is war }
    }
    
    artifacts {
        archives jar
    }
}

// Don't compress javascript
// vaadin.gwt.style = "PRETTY"
vaadin.version = vaadinVersion
vaadin.widgetset = 'org.jumpmind.metl.ui.AppWidgetSet'
vaadin.manageDependencies = true
vaadin.manageRepositories = false
//vaadin.mainSourceSet = 'src/main/webapp'
vaadin.push = true
sourceSets.main.compileClasspath += [configurations.provided]

dependencies {
    compile project(":metl-core")
    compile (group:"org.jumpmind.vaadin", name:"sqlexplorer-vaadin", version:"$sqlExplorerVersion", changing:true) {
       exclude group:'org.jumpmind.symmetric'
       exclude group:'com.vaadin'
    }
    compile "com.vaadin.addon:vaadin-context-menu:0.7.4"
    compile "com.cybercom:spring-ui-scope:0.0.2"
    compile "org.springframework:spring-webmvc:$springVersion"
    compile (group:"org.peimari", name:"maddon", version:"1.20") {
       exclude group:'com.vaadin'
    }
    compile "org.apache.poi:poi:3.11"
    compile "io.springfox:springfox-swagger2:$springfoxSwaggerVersion"
    compile "io.springfox:springfox-swagger-ui:$springfoxSwaggerVersion"
    compile ("org.reficio:soap-builder:$reficioSoapVersion") {
       exclude group:'com.googlecode.guava-osgi'
    }
    compile "jlibs:jlibs-xml:1.0"
    compile "javax.servlet:javax.servlet-api:$servletVersion"
    compile "org.eclipse.jetty:jetty-servlet:$jettyVersion"
    provided "javax.servlet.jsp:jsp-api:$jspVersion"
    provided "javax.websocket:javax.websocket-api:$webSocketVersion"
        
    testCompile "org.eclipse.jetty:jetty-webapp:$jettyVersion"
    testCompile "org.eclipse.jetty:jetty-jmx:$jettyVersion"
    testCompile "org.eclipse.jetty:jetty-annotations:$jettyVersion"
    testCompile "org.eclipse.jetty.websocket:javax-websocket-server-impl:$jettyVersion"
    
    executableWar project(":metl-server")    
}

task copyJavaDocsToWebapp(type: Copy) {    
    dependsOn javadoc    
    destinationDir = file("src/main/webapp/doc")
    into('javadoc') {
        from ("../metl-core/build/docs/javadoc") { include "**/*" }
    }    
}

develop.dependsOn tasks.getByPath(':metl-ui:vaadinCompile')
develop.dependsOn copyJavaDocsToWebapp
assemble.dependsOn copyJavaDocsToWebapp
assemble.dependsOn(jar)