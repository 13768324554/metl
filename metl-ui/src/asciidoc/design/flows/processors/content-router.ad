==== Entity Router
[cols="<25%h,<75%"]
|===================================
|Icon|image:entityrouter.png[]
|Description|The message router routes model based records within a message to one or more downstream components based on the routing criteria configured in the component.
   
|Inbound Message Type|Any Message Type
|Output Message Type|Any Message Type
|===================================

====== Parameters

[options="header" cols="<25%,<75%"]
|===================================
|Name|Description
include::../common-properties/input-model.ad[]
include::../common-properties/unit-of-work.ad[]
include::../common-properties/enabled.ad[]
include::../common-properties/rows-per-message.ad[]
include::../common-properties/inbound-queue-capacity.ad[]
include::../common-properties/shared.ad[]
|===================================

====== Routing Criteria

====== Expression

A groovy script expression that returns true or false.  The groovy script is executed/evaluated for each record in an inbound message.  
If the expression evaluates to true, the message is passed to the step at the right.  If the expression is evaluates to false, the message
is NOT passed to the step at the right. 

====== Target Step

The target step is the connected downstream component that will receive the message if the groovy expression 
evaluates to true.

TIP: The inbound message will go to ALL target steps where the expression evaluates to true (i.e. a message can go to more than one target step).

[id="entity-router-example-1",reftext="Example 1"]
====== Example 1.  Sample groovy expressions
----
if (ENTITY.get("ATTRIBUTE").equalsIgnoreCase("VALUE 1")) return true;
if (ENTITY.get("ATTRIBUTE").equalsIgnoreCase("VALUE 2")) return true;
----