==== SQL Reader
[cols="<25%h,<75%"]
|===================================
|Icon|image:dbreader.png[]
|Description|The SQL Reader is used to read data from a sql compliant relational database by specifying an SQL query.

The SQL Reader can take one or more input messages.  The reader will be executed (i.e. the sql query run) for every input message and
every entity record within an input message that it receives.  Any entity/attribute within an input message can
be used as a parameter in the SQL parameter by specifying the input model entity and attribute name in the query prefaced with a colon.
See example 1 below.  

Be default, the sql results will be mapped directly to the output model based on the table and column name of the 
selected fields.  When aggregate or other functions are used within the sql statement the table and column name will
not be available for mapping to the output model, so hints may be used to map the field directly to an output model
entity and attribute.  See example 2 below.

|Inbound Message Type|Model Based Message
|Output Message Type|Model Based Message
|===================================

====== Parameters

[options="header" cols="<25%,<75%"]
|===================================
|Name|Description
|Resource|The SQL Database Resource this SQL Reader uses.  See resource <<sql-database>>
include::../common-properties/input-model.ad[]
include::../common-properties/output-model.ad[]
include::../common-properties/enabled.ad[]
|Sql|The sql query or script that will be executed for this reader
include::../common-properties/rows-per-message.ad[]
|Trim Columns|Whether leading and trailing spaces should be trimmed from character fields after being selected from the database and 
before they are placed in the output model format
|Match On Column Name|Whether when matching SQL results to the output model, you match on table and column or column name only
include::../common-properties/message-strategy.ad[]
include::../common-properties/inbound-queue-capacity.ad[]
include::../common-properties/shared.ad[]
|===================================

====== Example 1.  Using Input Message Entity/Attribute as a parameter
----
select 
   field1, 
   field2 
from 
   mytable 
where 
   field3=:INPUT_MODEL_ENTITY_NAME.INPUT_MODEL_ATTRIBUTE_NAME
----
In the example above, the SQL Reader query will be run for each input record within each input message.
Each time the query is run, field3 will be restricted by the incoming row's INPUT_MODEL_ENTITY_NAME.INPUT_MODEL_ATTRIBUTE field. 

====== Example 2.  Using Hints to Map to the Output Model
----
select 
   field1,
   field2,
   count(*) /* OUTPUTMODEL_ENTITY_NAME.OUTPUT_MODEL_ATTRIBUTE_NAME */
from 
   mytable
----
In the example above, the results from the query execution will be mapped to:

1.  field1 => MYTABLE.FIELD1
2.  field2 => MYTABLE.FIELD2
3.  count(*) => OUTPUTMODEL_ENTITY_NAME.OUTPUT_MODEL_ATTRIBUTE_NAME
