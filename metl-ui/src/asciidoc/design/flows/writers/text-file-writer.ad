===== Text File Writer
[cols="<25%h,<75%"]
|===========================================
|Icon|image:textfilewriter.png[]
|Use When|Data needs written to a text based file
|Samples|
|Description|The Text File Writer is used to write data to a text based file.

The Text File Writer can write to one output file either locally or to a remote destination.  Text files that 
are written can be in any format (fixed length, comma delimited, etc.) and can be formatted by an upstream 
processing component like the Format Delimited and Format Fixed components.

|Inbound Message Type|Text Based Message
|Output Message Type|Text Based Message
|===========================================

====== Parameters

[options="header" cols="<25%,<75%"]
|===========================================
|Name|Description
|Resource|The file based resource (either local or remote) on which the file will be written.
include::../common-properties/unit-of-work.ad[]
include::../common-properties/enabled.ad[]
|Path and File|The relative path and file of the file to be written.  The relative path and file are concatenated with the 
absolute path specified in the File based resource 
|Must Exist|Requires the file to exist prior to writing
|Append|Add input data to the end of an existing file
|Line Terminator|String to append to the end of each line written to the file
|Encoding|The encoding of the file
include::../common-properties/inbound-queue-capacity.ad[]
include::../common-properties/shared.ad[]
|===========================================
IMPORTANT: Specifying None on the Action on Error does NOT stop the flow from failing when a file cannot be written.  It simply 
specifies what should be done with the file when the error condition does occur.
