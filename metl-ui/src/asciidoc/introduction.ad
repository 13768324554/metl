
== Introduction

Metl is a simple, web-based integration platform that allows for several different styles of data integration
including messaging, file based Extract/Transform/Load (ETL), and remote procedure invocation via Web Services.  
Metl was built to solve fairly simple day to day integration tasks without the need for custom coding, 
heavy infrastructure or high costs.  It can be deployed in the cloud or in an internal data center, and was built to 
allow developers to extend it to fit their needs by writing their own components that can be included and leveraged 
by the existing Metl infrastructure.

=== System Requirements

Metl is written in Java and requires a Java Runtime Environment (JRE) Standard Edition (SE) or Java Development 
Kit (JDK) Standard Edition (SE).
Most major operating systems and databases are supported.  
The minimum operating system requirements are:

* Java SE - Runtime Environment or Development Kit version 8 or above
* Memory - 1 (GB) available
* Disk - 256 (MB) available

Metl is accessed from a web console, which requires one of the following supported web browsers:

* Google Chrome 23 or newer
* Internet Explorer 8 or newer
* Mozilla Firefox 17 or newer
* Safari 6 or newer

=== Overview

Metl is a web application. 
It can be deployed as a web application archive (war) file under an existing Servlet container (Tomcat, JBoss, 
Websphere, etc.) or can be deployed stand-alone as a war file deployed under a bundled Jetty Servlet container.  
See <<installation>> section for details.

Once installed, the web application (agent) is accessed via a web browser and is used to <<design>>, <<deploy>> and 
<<manage>> integrations.

Integrations can be grouped or packaged into one or more projects.  Projects are a means to logically group integrations
together in some logical way.  As an example, a project might contain all of the integrations in or out of a specific system. 
See <<projects>> for additional details.   

Each project has a set of Resources, Models and Flows.  Resources represent connections to physical endpoints where data is 
read from or written to.  The following resource types are available in Metl:

* Database - A jdbc connection to a jdbc compliant relational database  
* FTP - An FTP connection to a file system
* SFtp - An SFtp connection to a file system
* Local File System - A connection to a local file system
* Web Resource  - An HTTP connection to REST or SOAP based services

See <<resources>> for additional details.

Models - Data integrated with Metl can be structured or unstructured data.  When dealing with Structured data, the structured
data can be defined by modeling the data.  Metl Models allow you to describe that structured data.  Models can either be relational
or hierarchical in nature.  See <<models>> for additional details.

Flows are the integrations themselves.  That is, flows allow the definition of data be retrieved from source systems, transformed, and 
written to target systems.  Flows are graphical in nature and allow the developer to configure data movement.  See <<flows>> for additional
details.

Components - Flows are constructed of components connected by links that describe the path of data through the flow.  The are various 
components available, and custom components can be built and integrated in to the existing Metl infrastructure.  

=== Architecture

TODO

=== Why Metl?

* Integrations can be configured in hours vs coding them in days or weeks
* Metl is easy to install.  Simply download the .war file and run
* Metl is web based.  No tools to install on each desktop.  Deploy locally, in your data center or in the cloud
* Metl doesn't require heavy infrastructure.  Any windows or linux box will do
* Metl is open.  No black box.  Download the source.  Write your own components if desired
* Metl is proven in large integration scenarios
* Metl is free.  The entire toolset is open source under the GPL license
* Metl is supported.  JumpMind, Inc. provides professional support and services for any need

=== License

METL is free software licensed under the GNU General Public License (GPL) version 3.0.
See http://www.gnu.org/licenses/gpl.html for the full text of the license.
This project includes software developed by JumpMind (http://www.jumpmind.com/) and a community of multiple contributors.
METL is licensed to JumpMind as the copyright holder under one or more Contributor License Agreements.
METL and the METL logos are trademarks of JumpMind.
