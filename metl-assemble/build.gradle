buildscript {
    repositories {
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
        mavenCentral()
    }

    dependencies {
    	classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.6'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
        classpath 'fi.jasoft.plugin:gradle-vaadin-plugin:0.10.2'
        classpath 'com.smokejumperit.gradle.license:Gradle-License-Report:0.0.2'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'      
        classpath 'co.riiid:gradle-github-plugin:0.3.1'
    }
}

apply plugin: 'co.riiid.gradle'

github {
    owner = 'JumpMind'
    repo = 'metl'
    token = githubToken
    tagName = version
    targetCommitish = 'master'
    name = version
    prerelease = false
    body = """# Metl Release
    ${version}
"""
}

task publishMetl {
    dependsOn clean 
    dependsOn generateDoc 
    dependsOn assemble 
    dependsOn deploy
    dependsOn githubRelease
	description = 'Publish software to SourceForge website'
    doLast {
        ant.taskdef(name: 'scp', classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
        classpath: configurations.sshAntTask.asPath)

        println "Publishing user-guide.html distribution to source forge"
        ant.scp(
            todir: "$sourceforgeUser:$sourceforgePassword@frs.sourceforge.net:/home/frs/project/metl/$version",
            trust: 'true',
            verbose: 'true') {
            fileset(dir: '../metl-ui/src/main/webapp/doc/html') {
                include(name: 'user-guide.html')
            }
        }

        println "Publishing war distribution to source forge"
        ant.scp(
            todir: "$sourceforgeUser:$sourceforgePassword@frs.sourceforge.net:/home/frs/project/metl/$version",
            trust: 'true',
            verbose: 'true') {
            fileset(dir:             '../metl-ui/build/libs') { 
                include(name: 'metl.war')
            }
        }
    }
}