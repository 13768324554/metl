<!--

    Licensed to JumpMind Inc under one or more contributor
    license agreements.  See the NOTICE file distributed
    with this work for additional information regarding
    copyright ownership.  JumpMind Inc licenses this file
    to you under the GNU General Public License, version 3.0 (GPLv3)
    (the "License"); you may not use this file except in compliance
    with the License.

    You should have received a copy of the GNU General Public License,
    version 3.0 (GPLv3) along with this library; if not, see
    <http://www.gnu.org/licenses/>.

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<components>
  <component category='PROCESSOR'
             id='Assert'
             inputMessageType='any'
             showInputModel='true'
             outputMessageType='any'
             resourceCategory='none'>
    <name>Assert</name>
    <className>org.jumpmind.metl.core.runtime.component.Assert</className>
    <keywords>test</keywords>
    <settings>
      <setting id='expected.entity.messages.count'
               required='false'
               type='integer'>
        <name>Expected Number of Entity Messages</name>
        <defaultValue>0</defaultValue>
      </setting>
      <setting id='expected.entity.couunt.per.message'
               required='false'
               type='integer'>
        <name>Expected Number of Entities Per Entity Message</name>
      </setting>
      <setting id='expected.distinct.entities.count'
               required='false'
               type='integer'>
        <name>Expected Distinct Types of Entities</name>
        <defaultValue></defaultValue>
      </setting>
      <setting id='expected.distinct.attributes.count'
               required='false'
               type='integer'>
        <name>Expected Distinct Types of Attributes</name>
        <defaultValue></defaultValue>
      </setting>            
      <setting id='expected.text.messages.count'
               required='false'
               type='integer'>
        <name>Expected Number of Text Messages</name>
        <defaultValue>0</defaultValue>
      </setting>
      <setting id='expected.binary.messages.count'
               required='false'
               type='integer'>
        <name>Expected Number of Binary Messages</name>
        <defaultValue>0</defaultValue>
      </setting>
      <setting id='expected.control.messages.count'
               required='false'
               type='integer'>
        <name>Expected Number of Control Messages</name>
        <defaultValue>0</defaultValue>
      </setting>
      <setting id='expected.empty.payload.messages.count'
               required='false'
               type='integer'>
        <name>Expected Number of Empty Payload Messages</name>
        <defaultValue>0</defaultValue>
      </setting>
      <setting id='expected.custom.header.pairs'
               required='false'
               type='multiline_text'>
        <name>Expected Custom Content Message Header Pairs</name>
      </setting>
      <setting id='expected.custom.control.header.pairs'
               required='false'
               type='multiline_text'>
        <name>Expected Custom Control Message Header Pairs</name>
      </setting>      
            
      <setting id='expected.text.payload'
               required='false'
               type='multiline_text'>
        <name>Expected Text Payload</name>
      </setting>      
      <setting id='sql.datasource'
               required='false'
               type='datasource_resource'>
        <name>Assert DataSource</name>
        <defaultValue>0</defaultValue>
      </setting>
      <setting id='sql'
               required='true'
               type='multiline_text'>
        <name>Assert Sql</name>
      </setting>
      <setting id='expected.sql.count'
               required='false'
               type='integer'>
        <name>Expected Count from Assert Sql</name>
        <defaultValue>0</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Call Flow'
             inputMessageType='any'
             outputMessageType='any'
             resourceCategory='none'>
    <name>Embed Flow</name>
    <className>org.jumpmind.metl.core.runtime.component.EmbedFlow</className>
    <keywords>subflow,execute,embed</keywords>
    <flowManipulatorClassName>org.jumpmind.metl.core.runtime.component.EmbedFlowFlowManipulator</flowManipulatorClassName>
    <settings>
      <setting id='flow.id'
               required='true'
               type='flow'>
        <name>Flow</name>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Deduper'
             inputMessageType='entity'
             inputOutputModelsMatch='true'
             outputMessageType='entity'
             resourceCategory='none'>
    <name>Deduper</name>
    <className>org.jumpmind.metl.core.runtime.component.Deduper</className>
    <keywords>unique</keywords>
    <description></description>
    <settings>
      <setting id='dedupe.type'
               required='true'
               type='choice'>
        <name>Dedupe Type</name>
        <defaultValue>ENTITY</defaultValue>
        <choices>
          <choice>ENTITY</choice>
          <choice>ATTRIBUTE</choice>
        </choices>
      </setting>
      <setting id='preserve.record'
               required='false'
               type='choice'>
        <name>Preserve Record</name>
        <defaultValue>First Record</defaultValue>
        <choices>
          <choice>First Record</choice>
          <choice>Last Record</choice>
        </choices>
      </setting>
      <setting id='rows.per.message'
               required='false'
               type='integer'>
        <name>Rows/Msg</name>
        <defaultValue>1000</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='Writer'
             id='35c4c0ae-b040-4f93-b212-5b92619c4064'
             inputMessageType='any'
             showInputModel='true'
             inputOutputModelsMatch='false'
             outputMessageType='any'
             resourceCategory='mailsession'>
    <name>Email Writer</name>
    <keywords>send,email,smtp,write</keywords>
    <className>org.jumpmind.metl.core.runtime.component.EmailWriter</className>
    <description></description>
    <settings>    
      <setting id='subject'
               required='true'
               type='text'>
        <name>Subject</name>
      </setting>
      <setting id='body'
               required='true'
               type='multiline_text'>
        <name>Body</name>
      </setting>
      <setting id='from.line'
               required='true'
               type='text'>
        <name>From:</name>
      </setting>      
      <setting id='to.line'
               required='false'
               type='text'>
        <name>To:</name>
      </setting>
      <setting id='cc.line'
               required='false'
               type='text'>
        <name>CC:</name>
      </setting>
      <setting id='bcc.line'
               required='false'
               type='text'>
        <name>BCC:</name>
      </setting>
      <setting id='source.step.email.addresses'
               required='false'
               type='source_step'>
        <name>Source Step For Email Addresses</name>
      </setting>
      <setting id='source.step.email.addresses.type'
               required='false'
               type='choice'>
        <name>Source Step Email Addresses Type</name>
        <defaultValue>TO</defaultValue>
        <choices>
          <choice>TO</choice>
          <choice>CC</choice>
          <choice>BCC</choice>
        </choices>
      </setting>       
      <setting id='one.email.per.recipient'
               required='false'
               type='boolean'>
        <name>One Email per Recipient</name>
        <defaultValue>false</defaultValue>
      </setting>          
      <setting id='run.when'
               required='false'
               type='choice'>
        <name>Run When</name>
        <defaultValue>PER UNIT OF WORK</defaultValue>
        <choices>
          <choice>PER UNIT OF WORK</choice>
          <choice>PER MESSAGE</choice>
          <choice>PER ENTITY</choice>
        </choices>
      </setting>
    </settings>
  </component>
  <component autoSendControlMessages='false'
             category='PROCESSOR'
             id='Content Router'
             inputMessageType='any'
             showInputModel='true'             
             inputOutputModelsMatch='true'
             outputMessageType='any'
             resourceCategory='none'
             shareable='false'>
    <name>Content Router</name>
    <className>org.jumpmind.metl.core.runtime.component.ContentRouter</className>
    <keywords>target</keywords>
    <description></description>
    <settings>
      <setting id='rows.per.message'
               required='true'
               type='integer'>
        <name>Rows/Msg</name>
        <defaultValue>1000</defaultValue>
      </setting>
      <setting id='only.route.first.match'
               required='false'
               type='boolean'>
        <name>Only Route First Match</name>
        <defaultValue>false</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Execute'
             inputMessageType='any'
             inputOutputModelsMatch='false'
             outputMessageType='text'
             resourceCategory='none'>
    <name>Execute</name>
    <className>org.jumpmind.metl.core.runtime.component.Execute</className>
    <keywords>launch,process</keywords>
    <description></description>
    <settings>
      <setting id='run.when'
               required='false'
               type='choice'>
        <name>Run When</name>
        <defaultValue>PER UNIT OF WORK</defaultValue>
        <choices>
          <choice>PER UNIT OF WORK</choice>
          <choice>PER MESSAGE</choice>
        </choices>
      </setting>
      <setting id='command'
               required='true'
               type='text'>
        <name>Command</name>
      </setting>
      <setting id='continue.on.error'
               required='false'
               type='boolean'>
        <name>Continue On Error</name>
        <defaultValue>false</defaultValue>
      </setting>
      <setting id='success.code'
               required='false'
               type='integer'>
        <name>Success Code</name>
        <defaultValue>0</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Format Delimited'
             inputMessageType='entity'
             inputOutputModelsMatch='false'
             outputMessageType='text'
             resourceCategory='none'>
    <name>Format Delimited</name>
    <className>org.jumpmind.metl.core.runtime.component.DelimitedFormatter</className>
    <keywords>csv,generate,file,files,text</keywords>
    <description></description>
    <settings>
      <setting id='delimited.formatter.delimiter'
               required='true'
               type='text'>
        <name>Delimiter</name>
        <defaultValue>,</defaultValue>
      </setting>
      <setting id='delimited.formatter.quote.character'
               required='false'
               type='text'>
        <name>Quote Character</name>
        <defaultValue>&quot;</defaultValue>
      </setting>
      <setting id='delimited.formatter.header'
               required='false'
               type='boolean'>
        <name>Header line</name>
        <defaultValue>false</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Format Fixed'
             inputMessageType='entity'
             inputOutputModelsMatch='false'
             outputMessageType='text'
             resourceCategory='none'>
    <name>Format Fixed</name>
    <className>org.jumpmind.metl.core.runtime.component.FixedLengthFormatter</className>
    <keywords>file,files,text,generate</keywords>
    <description></description>
    <settings>
      <setting id='fixed.length.formatter.header'
               required='false'
               type='boolean'>
        <name>Header line</name>
        <defaultValue>false</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Format XML'
             inputMessageType='entity'
             inputOutputModelsMatch='false'
             outputMessageType='text'
             resourceCategory='none'>
    <name>Format XML</name>
    <className>org.jumpmind.metl.core.runtime.component.XmlFormatter</className>
    <keywords>files</keywords>
    <description></description>
    <settings>
      <setting id='run.when'
               required='false'
               type='choice'>
        <name>Run When</name>
        <defaultValue>PER MESSAGE</defaultValue>
        <choices>
          <choice>PER UNIT OF WORK</choice>
          <choice>PER MESSAGE</choice>
        </choices>
      </setting>
      <setting id='xml.formatter.ignore.namespace'
               required='false'
               type='boolean'>
        <name>Ignore namespaces for XPath matching</name>
        <defaultValue>true</defaultValue>
      </setting>
      <setting id='xml.formatter.xml.format'
               required='false'
               type='choice'>
        <name>XML Format</name>
        <defaultValue>Pretty</defaultValue>
        <choices>
          <choice>Pretty</choice>
          <choice>Compact</choice>
          <choice>Raw</choice>
        </choices>
      </setting>
      <setting id='xml.formatter.null.handling'
               required='false'
               type='choice'>
        <name>XML Null Handling</name>
        <defaultValue>Empty Element</defaultValue>
        <choices>
          <choice>Empty Element</choice>
          <choice>Remove Element</choice>
          <choice>XML nil</choice>
        </choices>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Merger'
             inputMessageType='entity'
             inputOutputModelsMatch='true'
             outputMessageType='entity'
             resourceCategory='none'>
    <name>Merger</name>
    <className>org.jumpmind.metl.core.runtime.component.Merger</className>
    <keywords>merge,join</keywords>
    <description></description>
    <settings>
      <setting id='rows.per.message'
               required='false'
               type='integer'>
        <name>Rows/Msg</name>
        <defaultValue>10</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Lookup'
             inputMessageType='any'
             inputOutputModelsMatch='true'
             showInputModel='true'
             outputMessageType='entity'
             resourceCategory='none'
             shareable='false'>
    <name>Lookup</name>
    <className>org.jumpmind.metl.core.runtime.component.Lookup</className>
    <keywords>find,enhance</keywords>
    <description></description>
    <settings>
      <setting id='lookup.data.source.step'
               required='true'
               type='source_step'>
        <name>Lookup Data Source</name>
      </setting>
      <setting id='lookup.key.attribute'
               required='true'
               type='entity_column'>
        <name>Lookup Key Attribute</name>
      </setting>
      <setting id='lookup.value.attribute'
               required='true'
               type='entity_column'>
        <name>Lookup Value Attribute</name>
      </setting>
      <setting id='replacement.key.attribute'
               required='true'
               type='entity_column'>
        <name>Replacement Key Attribute</name>
      </setting>
      <setting id='replacement.value.attribute'
               required='true'
               type='entity_column'>
        <name>Replacement Value Attribute</name>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Mapping'
             inputMessageType='entity'
             inputOutputModelsMatch='false'
             outputMessageType='entity'
             resourceCategory='none'>
    <name>Mapping</name>
    <className>org.jumpmind.metl.core.runtime.component.Mapping</className>
    <keywords>map</keywords>
    <description></description>
    <settings>
      <setting id='set.unmapped.attributes.to.null'
               required='false'
               type='boolean'>
        <name>Set Unmapped Attributes To Null</name>
        <defaultValue>false</defaultValue>
      </setting>
      <setting id='entity.per.record'
               required='false'
               type='boolean'>
        <name>Entity Per Record</name>
        <defaultValue>false</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Message Logger'
             inputMessageType='any'
             showInputModel='true'             
             inputOutputModelsMatch='true'
             outputMessageType='any'
             resourceCategory='none'>
    <name>Message Logger</name>
    <className>org.jumpmind.metl.core.runtime.component.MessageLogger</className>
    <keywords>log</keywords>
    <description></description>
    <settings>
      <setting id='qualify.with.entity.name'
               required='false'
               type='boolean'>
        <name>Qualify Entity Attributes with Entity Name</name>
        <defaultValue>false</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Multiplier'
             inputMessageType='entity'
             inputOutputModelsMatch='true'
             outputMessageType='entity'
             resourceCategory='none'
             shareable='false'>
    <name>Multiplier</name>
    <className>org.jumpmind.metl.core.runtime.component.Multiplier</className>
    <keywords>generate,multiply</keywords>
    <description></description>
    <settings>
      <setting id='multiplier.source.step'
               required='true'
               type='source_step'>
        <name>Multiplier Source</name>
      </setting>
      <setting id='rows.per.message'
               required='false'
               type='integer'>
        <name>Rows/Msg</name>
        <defaultValue>10</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='No Op'
             inputMessageType='any'
             inputOutputModelsMatch='false'
             outputMessageType='any'
             resourceCategory='none'
             supportsMultipleThreads='true'>
    <name>No Op</name>
    <className>org.jumpmind.metl.core.runtime.component.NoOp</className>
    <keywords>nothing,noop</keywords>
    <description></description>
    <settings></settings>
  </component>
  <component category='PROCESSOR'
             id='Parse Delimited'
             inputMessageType='text'
             inputOutputModelsMatch='false'
             outputMessageType='entity'
             resourceCategory='none'
             supportsMultipleThreads='true'>
    <name>Parse Delimited</name>
    <className>org.jumpmind.metl.core.runtime.component.DelimitedParser</className>
    <keywords>parse,files,file,csv</keywords>
    <description></description>
    <settings>
      <setting id='delimiter'
               required='true'
               type='text'>
        <name>Delimiter</name>
        <defaultValue>,</defaultValue>
      </setting>
      <setting id='quote.character'
               required='false'
               type='text'>
        <name>Quote Character</name>
        <defaultValue>&quot;</defaultValue>
      </setting>
      <setting id='header.lines.to.skip'
               required='false'
               type='integer'>
        <name>Number of Header Lines to Skip</name>
        <defaultValue>0</defaultValue>
      </setting>
      <setting id='footer.lines.to.skip'
               required='false'
               type='integer'>
        <name>Number of Footer Lines to Skip</name>
        <defaultValue>0</defaultValue>
      </setting>
      <setting id='encoding'
               required='false'
               type='text'>
        <name>Encoding</name>
        <defaultValue>UTF-8</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Parse Fixed'
             inputMessageType='text'
             outputMessageType='entity'>
    <name>Parse Fixed Length</name>
    <className>org.jumpmind.metl.core.runtime.component.FixedLengthParser</className>
    <keywords>parse,file,files</keywords>
    <description></description>
    <settings>
      <setting id='header.lines.to.skip'
               required='false'
               type='integer'>
        <name>Number of Header Lines to Skip</name>
        <defaultValue>0</defaultValue>
      </setting>
      <setting id='footer.lines.to.skip'
               required='false'
               type='integer'>
        <name>Number of Footer Lines to Skip</name>
        <defaultValue>0</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Parse XML'
             inputMessageType='text'
             inputOutputModelsMatch='false'
             outputMessageType='entity'
             resourceCategory='none'
             supportsMultipleThreads='true'>
    <name>Parse XML</name>
    <className>org.jumpmind.metl.core.runtime.component.XmlParser</className>
    <keywords>parse,file,files,xml</keywords>
    <description></description>
    <settings>
      <setting id='rows.per.message'
               required='true'
               type='integer'>
        <name>Rows/Msg</name>
        <defaultValue>1000</defaultValue>
      </setting>
      <setting id='optimize.for.speed'
               required='false'
               type='boolean'>
        <name>Optimize for speed. Supports only basic XPath</name>
        <defaultValue>false</defaultValue>
      </setting>
      <setting id='xml.formatter.ignore.namespace'
               required='false'
               type='boolean'>
        <name>Ignore namespaces for XPath matching</name>
        <defaultValue>true</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Script'
             inputMessageType='any'
             showInputModel='true'
             inputOutputModelsMatch='false'
             outputMessageType='any'
             resourceCategory='any'
             supportsMultipleThreads='true'>
    <name>Groovy Script</name>
    <className>org.jumpmind.metl.core.runtime.component.Script</className>
    <keywords>groovy,logic,java</keywords>
    <description></description>
    <settings>
      <setting id='imports'
               required='true'
               type='script'
               visible='false'>
        <name>Import Statements</name>
      </setting>
      <setting id='methods'
               required='true'
               type='script'
               visible='false'>
        <name>Additional Methods</name>
      </setting>
      <setting id='init.script'
               required='true'
               type='script'
               visible='false'>
        <name>Init Script</name>
      </setting>
      <setting id='handle.msg.script'
               required='true'
               type='script'
               visible='false'>
        <name>Handle Msg Script</name>
        <defaultValue>
forwardMessage()        
        </defaultValue>
      </setting>
      <setting id='on.flow.success.script'
               required='true'
               type='script'
               visible='false'>
        <name>Ended with Success Script</name>
      </setting>
      <setting id='on.flow.error.script'
               required='true'
               type='script'
               visible='false'>
        <name>Ended with Error Script</name>
      </setting>
    </settings>
  </component>
  <component category='READER'
             id='Text Constant'
             inputMessageType='text'
             inputOutputModelsMatch='false'
             outputMessageType='text'>
    <name>Text Constant</name>
    <className>org.jumpmind.metl.core.runtime.component.TextConstant</className>
    <keywords>hardcode</keywords>
    <description></description>
    <settings>
      <setting id='run.when'
               required='false'
               type='choice'>
        <name>Run When</name>
        <defaultValue>PER UNIT OF WORK</defaultValue>
        <choices>
          <choice>PER UNIT OF WORK</choice>
          <choice>PER MESSAGE</choice>
        </choices>
      </setting>
      <setting id='text'
               required='false'
               type='multiline_text'>
        <name>Text</name>
      </setting>
      <setting id='split.on.line.feed'
               required='false'
               type='boolean'>
        <name>Split On Line Feed</name>
        <defaultValue>true</defaultValue>
      </setting>
      <setting id='rows.per.message'
               required='false'
               type='integer'>
        <name>Rows/Msg</name>
        <defaultValue>1000</defaultValue>
      </setting>
      <setting id='control.message.on.text.send'
               required='false'
               type='boolean'>
        <name>Send Control Message on Text Send</name>
        <defaultValue>false</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Text Replace'
             inputMessageType='text'
             inputOutputModelsMatch='false'
             outputMessageType='text'
             resourceCategory='none'>
    <name>Text Replace</name>
    <className>org.jumpmind.metl.core.runtime.component.TextReplace</className>
    <description></description>
    <settings>
      <setting id='search.for'
               required='true'
               type='text'>
        <name>Search For (regex)</name>
      </setting>
      <setting id='replace.with'
               required='false'
               type='text'>
        <name>Replace With</name>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Transformer'
             inputMessageType='entity'
             inputOutputModelsMatch='true'
             outputMessageType='entity'
             resourceCategory='none'>
    <name>Transformer</name>
    <className>org.jumpmind.metl.core.runtime.component.Transformer</className>
    <description></description>
    <settings>
      <setting id='pass.along.control.messages'
               required='false'
               type='boolean'>
        <name>Pass Along Control Messages</name>
        <defaultValue>false</defaultValue>
      </setting>    
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Web'
             inputMessageType='text'
             inputOutputModelsMatch='false'
             outputMessageType='text'
             resourceCategory='http'
             supportsMultipleThreads='true'>
    <name>Web Request</name>
    <className>org.jumpmind.metl.core.runtime.component.Web</className>
    <keywords>invoke,rest,http</keywords>
    <description></description>
    <settings>
      <setting id='run.when'
               required='false'
               type='choice'>
        <name>Run When</name>
        <defaultValue>PER MESSAGE</defaultValue>
        <choices>
          <choice>PER UNIT OF WORK</choice>
          <choice>PER MESSAGE</choice>
        </choices>
      </setting>
      <setting id='relative.path'
               required='false'
               type='text'>
        <name>Append To Url</name>
      </setting>
      <setting id='body.from'
               required='true'
               type='choice'>
        <name>Body From</name>
        <defaultValue>Message</defaultValue>
        <choices>
          <choice>Message</choice>
          <choice>Provided</choice>
        </choices>
      </setting>      
      <setting id='body.text'
               required='false'
               type='multiline_text'>
        <name>Body Text</name>
      </setting>
      <setting id='http.headers'
               required='false'
               type='multiline_text'>
        <name>Http Headers</name>
        <defaultValue>User-Agent:Metl</defaultValue>
      </setting>
      <setting id='http.parameters'
         required='false'
         type='multiline_text'>
         <name>Http Parameters</name>
      </setting>                  
      <setting id='parameter.replacement'
               required='false'
               type='boolean'>
        <name>Parameter replacement</name>
        <defaultValue>false</defaultValue>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='XSLT Processor'
             inputMessageType='entity'
             inputOutputModelsMatch='false'
             outputMessageType='text'
             resourceCategory='none'>
    <name>XSLT Processor</name>
    <className>org.jumpmind.metl.core.runtime.component.XsltProcessor</className>
    <keywords>xml</keywords>
    <description></description>
    <settings>
      <setting id='xslt.processor.output.all.attributes'
               required='false'
               type='boolean'>
        <name>Output all attributes</name>
        <defaultValue>false</defaultValue>
      </setting>
      <setting id='xslt.processor.parameter.replacement'
               required='false'
               type='boolean'>
        <name>Parameter replacement</name>
        <defaultValue>true</defaultValue>
      </setting>
      <setting id='xslt.processor.xml.omit.declaration'
               required='false'
               type='boolean'>
        <name>Omit XML Declaration</name>
        <defaultValue>false</defaultValue>
      </setting>
      <setting id='xslt.processor.xml.format'
               required='false'
               type='choice'>
        <name>XML Format</name>
        <defaultValue>Pretty</defaultValue>
        <choices>
          <choice>Pretty</choice>
          <choice>Compact</choice>
          <choice>Raw</choice>
        </choices>
      </setting>
    </settings>
  </component>
  <component category='READER'
             id='XmlReader'
             inputMessageType='text'
             inputOutputModelsMatch='false'
             outputMessageType='text'
             resourceCategory='streamable'>
    <name>XML Reader</name>
    <className>org.jumpmind.metl.core.runtime.component.XmlReader</className>
    <keywords>files,file</keywords>
    <description></description>
    <settings>
      <setting id='run.when'
               required='false'
               type='choice'>
        <name>Run When</name>
        <defaultValue>PER UNIT OF WORK</defaultValue>
        <choices>
          <choice>PER UNIT OF WORK</choice>
          <choice>PER MESSAGE</choice>
        </choices>
      </setting>
      <setting id='get.file.name.from.message'
               required='false'
               type='boolean'>
        <name>Get File Name From Message</name>
      </setting>
      <setting id='relative.path'
               required='false'
               type='text'>
        <name>File Path</name>
      </setting>
      <setting id='read.tag'
               required='false'
               type='text'>
        <name>Tag to find and send, defaults to root</name>
        <description></description>
      </setting>
      <setting id='read.tags.per.message'
               required='false'
               type='integer'>
        <name>Number of read tags to send together</name>
      </setting>
    </settings>
  </component>
  <component category='PROCESSOR'
             id='Union'
             inputMessageType='entity'
             inputOutputModelsMatch='true'
             outputMessageType='entity'
             resourceCategory='none'>
    <name>Union</name>
    <className>org.jumpmind.metl.core.runtime.component.Union</className>
    <description></description>
  </component>  
</components>
